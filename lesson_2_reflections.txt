What happens when you initialize a repository? Why do you need to do it?

It creates a .git file in the directory. We need it so that we can commit the files in the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It lets you decide which files you want to commit as a single commit operation

How can you use the staging area to make sure you have one commit per logical
change?

We can add all the files for the logical change in the staging area and then commit them together

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches allow you to work on a separate component of the project without affecting the main development 

How do the diagrams help you visualize the branch structure?

We can easily spot the branch paths and which commits were included in those branches and the others

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

We combine the changes introduced in an experimental branch in our main flow. The diagrams helps us identify where the two branches were merged

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

If there are no conflicts in the two codes automatic merge saves time
